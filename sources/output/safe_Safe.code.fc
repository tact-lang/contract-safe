#pragma version =0.4.2;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

slice __tact_verify_address(slice address) inline {
    throw_unless(136, address.slice_bits() == 267);
    var h = address.preload_uint(11);
    throw_unless(136, (h == 1024) | (h == 1279));

    return address;
}

(slice, slice) __tact_load_address(slice cs) inline {
    slice raw = cs~load_msg_addr();
    return (cs, __tact_verify_address(raw));
}

builder __tact_store_address(builder b, slice address) inline {
    return b.store_slice(__tact_verify_address(address));
}

forall X -> X __tact_not_null(X x) inline { throw_if(128, null?(x)); return x; }

(cell, int) __tact_dict_delete(cell dict, int key_len, slice index) asm(index dict key_len) "DICTDEL";

(slice, int) __tact_dict_get(cell dict, int key_len, slice index) asm(index dict key_len) "DICTGET" "NULLSWAPIFNOT";

global (int, slice, int, slice) __tact_context;
global slice __tact_context_sender;
global cell __tact_context_sys;

(int, slice, int, slice) __tact_context_get() inline { return __tact_context; }

builder __tact_store_bool(builder b, int v) inline {
    b = b.store_int(v, 1);
    return b;
}

(cell, ()) __tact_dict_set_slice_int(cell d, int kl, slice k, int v, int vl) {
    if (null?(v)) {
        var (r, ok) = __tact_dict_delete(d, kl, k);
        return (r, ());
    } else {
        return (dict_set_builder(d, kl, k, begin_cell().store_int(v, vl)), ());
    }
}

int __tact_dict_get_slice_int(cell d, int kl, slice k, int vl) inline {
    var (r, ok) = __tact_dict_get(d, kl, k);
    if (ok) {
        return r~load_int(vl);
    } else {
        return null();
    }
}

forall X0, X1 -> tuple __tact_tuple_create_2((X0, X1) v) asm "2 TUPLE";

forall X0, X1, X2, X3 -> tuple __tact_tuple_create_4((X0, X1, X2, X3) v) asm "4 TUPLE";

(slice, ((slice))) __gen_read_SafeDeployment(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1857061459);
    var v'remaining = sc_0~__tact_load_address();
    return (sc_0, (v'remaining));
}

(slice, ((slice, int, int, cell))) __gen_read_SafeOperationTransfer(slice sc_0) inline {
    var v'to = sc_0~__tact_load_address();
    var v'value = sc_0~load_coins();
    var v'mode = sc_0~load_uint(8);
    var v'body = sc_0~load_int(1) ? sc_0~load_ref() : null();
    return (sc_0, (v'to, v'value, v'mode, v'body));
}

builder __gen_write_SafeParameters(builder build_0, (int, int) v) inline {
    var (v'timeout, v'requestPrice) = v;
    build_0 = build_0.store_uint(v'timeout, 32);
    build_0 = build_0.store_coins(v'requestPrice);
    return build_0;
}

(slice, ((int, int))) __gen_read_SafeParameters(slice sc_0) inline {
    var v'timeout = sc_0~load_uint(32);
    var v'requestPrice = sc_0~load_coins();
    return (sc_0, (v'timeout, v'requestPrice));
}

(slice, (((int, int)))) __gen_read_SafeOperationUpdateParameters(slice sc_0) inline {
    var v'parameters = sc_0~__gen_read_SafeParameters();
    return (sc_0, (v'parameters));
}

tuple __gen_SafeOperationTransfer_as_optional(((slice, int, int, cell)) v) inline {
    var (v'to, v'value, v'mode, v'body) = v;
    return __tact_tuple_create_4(v'to, v'value, v'mode, v'body);
}

tuple __gen_SafeOperationUpdateParameters_as_optional((((int, int))) v) inline {
    var ((v'parameters'timeout, v'parameters'requestPrice)) = v;
    return __tact_tuple_create_2(v'parameters'timeout, v'parameters'requestPrice);
}

(slice, ((tuple, tuple))) __gen_read_SafeOperation(slice sc_0) inline {
    var v'transfer = sc_0~load_int(1) ? __gen_SafeOperationTransfer_as_optional(sc_0~__gen_read_SafeOperationTransfer()) : null();
    var v'parameters = sc_0~load_int(1) ? __gen_SafeOperationUpdateParameters_as_optional(sc_0~__gen_read_SafeOperationUpdateParameters()) : null();
    return (sc_0, (v'transfer, v'parameters));
}

(slice, (((tuple, tuple)))) __gen_read_SafeRequestOperation(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2724662621);
    var v'operation = sc_0~__gen_read_SafeOperation();
    return (sc_0, (v'operation));
}

builder __gen_write_Safe(builder build_0, (int, cell, int, int, (int, int)) v) inline {
    var (v'seqno, v'owners, v'ownersCount, v'treshold, (v'parameters'timeout, v'parameters'requestPrice)) = v;
    build_0 = build_0.store_uint(v'seqno, 64);
    build_0 = build_0.store_dict(v'owners);
    build_0 = build_0.store_int(v'ownersCount, 257);
    build_0 = build_0.store_int(v'treshold, 257);
    build_0 = __gen_write_SafeParameters(build_0, (v'parameters'timeout, v'parameters'requestPrice));
    return build_0;
}

(slice, ((int, cell, int, int, (int, int)))) __gen_read_Safe(slice sc_0) inline {
    var v'seqno = sc_0~load_uint(64);
    var v'owners = sc_0~load_dict();
    var v'ownersCount = sc_0~load_int(257);
    var v'treshold = sc_0~load_int(257);
    var v'parameters = sc_0~__gen_read_SafeParameters();
    return (sc_0, (v'seqno, v'owners, v'ownersCount, v'treshold, v'parameters));
}

(int, int) __gen_SafeParameters_to_external(((int, int)) v) inline {
    var (v'timeout, v'requestPrice) = v; 
    return (v'timeout, v'requestPrice);
}

(slice, ((slice, int))) __gen_read_$init$Safe(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    var v'id = sc_0~load_int(257);
    return (sc_0, (v'owner, v'id));
}

((int, int)) __gen_constructor_SafeParameters$timeout_requestPrice(int timeout, int requestPrice) inline {
    return (timeout, requestPrice);
}

(int, cell, int, int, (int, int)) $__gen_Safe_init(slice $owner, int $id) impure inline_ref {
    var (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice))) = (null(), null(), null(), null(), null());
    $self'seqno = 0;
    $self'owners = null();
    $self'owners~__tact_dict_set_slice_int(267, $owner, true, 1);
    $self'ownersCount = 1;
    $self'treshold = 1;
    ($self'parameters'timeout, $self'parameters'requestPrice) = __gen_constructor_SafeParameters$timeout_requestPrice(86400, 1000000000);
    return ($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice));
}

(int, cell, int, int, (int, int)) __gen_load_Safe() impure inline {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~__gen_read_Safe();
    } else {
        (slice owner, int id) = $sc~__gen_read_$init$Safe();
        $sc.end_parse();
        return $__gen_Safe_init(owner, id);
    }
}

() __gen_store_Safe((int, cell, int, int, (int, int)) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = __gen_write_Safe(b, v);
    set_data(b.end_cell());
}

() $send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref {
    var (($params'bounce, $params'to, $params'value, $params'mode, $params'body, $params'code, $params'data)) = $params;
    builder $b = begin_cell();
    $b = store_int($b, 1, 2);
    $b = __tact_store_bool($b, $params'bounce);
    $b = store_int($b, 0, 3);
    $b = __tact_store_address($b, $params'to);
    $b = store_coins($b, $params'value);
    $b = store_int($b, 0, ((((1 + 4) + 4) + 64) + 32));
    if (((~ null?($params'code)) | (~ null?($params'data)))) {
        $b = __tact_store_bool($b, true);
        builder $bc = begin_cell();
        $bc = __tact_store_bool($bc, false);
        $bc = __tact_store_bool($bc, false);
        if ((~ null?($params'code))) {
            $bc = __tact_store_bool($bc, true);
            $bc = store_ref($bc, __tact_not_null($params'code));
        } else {
            $bc = __tact_store_bool($bc, false);
        }
        if ((~ null?($params'data))) {
            $bc = __tact_store_bool($bc, true);
            $bc = store_ref($bc, __tact_not_null($params'data));
        } else {
            $bc = __tact_store_bool($bc, false);
        }
        $bc = __tact_store_bool($bc, false);
        $b = __tact_store_bool($b, true);
        $b = store_ref($b, end_cell($bc));
    } else {
        $b = __tact_store_bool($b, false);
    }
    cell $body = $params'body;
    if ((~ null?($body))) {
        $b = __tact_store_bool($b, true);
        $b = store_ref($b, __tact_not_null($body));
    } else {
        $b = __tact_store_bool($b, false);
    }
    cell $c = end_cell($b);
    send_raw_message($c, $params'mode);
}

(int, int) $__gen_Safe_parameters((int, cell, int, int, (int, int)) $self) impure inline_ref {
    var (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice))) = $self;
    return ($self'parameters'timeout, $self'parameters'requestPrice);
}

_ $__gen_get_parameters() method_id(68438) {
    var self = __gen_load_Safe();
    var res = $__gen_Safe_parameters(self);
    return __gen_SafeParameters_to_external(res);
}

int $__gen_Safe_treshold((int, cell, int, int, (int, int)) $self) impure inline_ref {
    var (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice))) = $self;
    return $self'treshold;
}

_ $__gen_get_treshold() method_id(114048) {
    var self = __gen_load_Safe();
    var res = $__gen_Safe_treshold(self);
    return res;
}

int $__gen_Safe_seqno((int, cell, int, int, (int, int)) $self) impure inline_ref {
    var (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice))) = $self;
    return $self'seqno;
}

_ $__gen_get_seqno() method_id(85143) {
    var self = __gen_load_Safe();
    var res = $__gen_Safe_seqno(self);
    return res;
}

int $__gen_Safe_isOwner((int, cell, int, int, (int, int)) $self, slice $address) impure inline_ref {
    var (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice))) = $self;
    return (__tact_dict_get_slice_int($self'owners, 267, $address, 1) == true);
}

_ $__gen_get_isOwner(slice $$address) method_id(89603) {
    slice $address = __tact_verify_address($$address);
    var self = __gen_load_Safe();
    var res = $__gen_Safe_isOwner(self, $address);
    return res;
}

cell $__gen_Safe_owners((int, cell, int, int, (int, int)) $self) impure inline_ref {
    var (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice))) = $self;
    return $self'owners;
}

_ $__gen_get_owners() method_id(84885) {
    var self = __gen_load_Safe();
    var res = $__gen_Safe_owners(self);
    return res;
}

((int, slice, int, int, cell, cell, cell)) __gen_constructor_SendParameters$to_value_mode(slice to, int value, int mode) inline {
    return (true, to, value, mode, null(), null(), null());
}

(((int, cell, int, int, (int, int))), ()) $__gen_Safe_receive_SafeDeployment((int, cell, int, int, (int, int)) $self, (slice) $deploy) impure inline {
    var ($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice)) = $self;
    var ($deploy'remaining) = $deploy;
    $send(__gen_constructor_SendParameters$to_value_mode($deploy'remaining, 0, 64));
    return (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice)), ());
}

(((int, cell, int, int, (int, int))), ()) $__gen_Safe_receive_SafeRequestOperation((int, cell, int, int, (int, int)) $self, ((tuple, tuple)) $request) impure inline {
    var ($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice)) = $self;
    var (($request'operation'transfer, $request'operation'parameters)) = $request;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(46307, (__tact_dict_get_slice_int($self'owners, 267, $ctx'sender, 1) == true));
    throw_unless(5165, ($ctx'value >= $self'parameters'requestPrice));
    int $notNullOperations = 0;
    if ((~ null?($request'operation'transfer))) {
        $notNullOperations = ($notNullOperations + 1);
    }
    if ((~ null?($request'operation'parameters))) {
        $notNullOperations = ($notNullOperations + 1);
    }
    throw_unless(44757, ($notNullOperations != 1));
    return (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice)), ());
}

((int, cell, int, int, (int, int)), int) __gen_router_Safe((int, cell, int, int, (int, int)) self, int msg_bounced, slice in_msg) impure inline_ref {
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Receive SafeDeployment message
    if (op == 1857061459) {
        var msg = in_msg~__gen_read_SafeDeployment();
        self~$__gen_Safe_receive_SafeDeployment(msg);
        return (self, true);
    }
    
    ;; Receive SafeRequestOperation message
    if (op == 2724662621) {
        var msg = in_msg~__gen_read_SafeRequestOperation();
        self~$__gen_Safe_receive_SafeRequestOperation(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = ((msg_flags & 1) == 1 ? true : false);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = __gen_load_Safe();
    
    ;; Handle operation
    int handled = self~__gen_router_Safe(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(handled, 130);
    
    ;; Persist state
    __gen_store_Safe(self);
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.any.v0"H >> 128
    );
}

_ get_abi_ipfs() {
    return "ipfs://Qma48hjcEUFqUxQwCdn2NE1f85KTERK8hWdPsoEWAWzhhc";
}

_ lazy_deployment_completed() {
    return get_data().begin_parse().load_int(1);
}
