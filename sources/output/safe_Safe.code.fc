#include "safe_Safe.headers.fc";
#include "safe_Safe.stdlib.fc";
#include "safe_Safe.storage.fc";

;;
;; Contract Safe functions
;;

(int, cell, int, int, (int, int)) $Safe$_contract_init(slice $owner, int $id) impure inline_ref {
    var (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice))) = (null(), null(), null(), null(), null());
    $self'seqno = 0;
    $self'owners = null();
    $self'owners~__tact_dict_set_slice_int(267, $owner, true, 1);
    $self'ownersCount = 1;
    $self'treshold = 1;
    ($self'parameters'timeout, $self'parameters'requestPrice) = $SafeParameters$_constructor_timeout_requestPrice(86400, 1000000000);
    return ($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice));
}

(int, int) $Safe$_fun_parameters((int, cell, int, int, (int, int)) $self) impure inline_ref {
    var (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice))) = $self;
    return ($self'parameters'timeout, $self'parameters'requestPrice);
}

int $Safe$_fun_treshold((int, cell, int, int, (int, int)) $self) impure inline_ref {
    var (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice))) = $self;
    return $self'treshold;
}

int $Safe$_fun_seqno((int, cell, int, int, (int, int)) $self) impure inline_ref {
    var (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice))) = $self;
    return $self'seqno;
}

int $Safe$_fun_isOwner((int, cell, int, int, (int, int)) $self, slice $address) impure inline_ref {
    var (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice))) = $self;
    return (__tact_dict_get_slice_int($self'owners, 267, $address, 1) == true);
}

cell $Safe$_fun_owners((int, cell, int, int, (int, int)) $self) impure inline_ref {
    var (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice))) = $self;
    return $self'owners;
}

;;
;; Receivers of a Contract Safe
;;

(((int, cell, int, int, (int, int))), ()) $Safe$_receive_binary_SafeDeployment((int, cell, int, int, (int, int)) $self, (slice) $deploy) impure inline {
    var ($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice)) = $self;
    var ($deploy'remaining) = $deploy;
    $global_send($SendParameters$_constructor_to_value_mode($deploy'remaining, 0, 64));
    return (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice)), ());
}

(((int, cell, int, int, (int, int))), ()) $Safe$_receive_binary_SafeRequestOperation((int, cell, int, int, (int, int)) $self, ((tuple, tuple)) $request) impure inline {
    var ($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice)) = $self;
    var (($request'operation'transfer, $request'operation'parameters)) = $request;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(46307, (__tact_dict_get_slice_int($self'owners, 267, $ctx'sender, 1) == true));
    throw_unless(5165, ($ctx'value >= $self'parameters'requestPrice));
    int $notNullOperations = 0;
    if ((~ null?($request'operation'transfer))) {
        $notNullOperations = ($notNullOperations + 1);
    }
    if ((~ null?($request'operation'parameters))) {
        $notNullOperations = ($notNullOperations + 1);
    }
    throw_unless(44757, ($notNullOperations != 1));
    return (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice)), ());
}

(((int, cell, int, int, (int, int))), ()) $Safe$_receive_binary_Deploy((int, cell, int, int, (int, int)) $self, (int) $deploy) impure inline {
    var ($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice)) = $self;
    var ($deploy'queryId) = $deploy;
    $global_reply($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'seqno, $self'owners, $self'ownersCount, $self'treshold, ($self'parameters'timeout, $self'parameters'requestPrice)), ());
}

;;
;; Get methods of a Contract Safe
;;

_ %parameters() method_id(68438) {
    var self = $Safe$_contract_load();
    var res = $Safe$_fun_parameters(self);
    return $SafeParameters$_to_external(res);
}

_ %treshold() method_id(114048) {
    var self = $Safe$_contract_load();
    var res = $Safe$_fun_treshold(self);
    return res;
}

_ %seqno() method_id(85143) {
    var self = $Safe$_contract_load();
    var res = $Safe$_fun_seqno(self);
    return res;
}

_ %isOwner(slice $$address) method_id(89603) {
    slice $address = __tact_verify_address($$address);
    var self = $Safe$_contract_load();
    var res = $Safe$_fun_isOwner(self, $address);
    return res;
}

_ %owners() method_id(84885) {
    var self = $Safe$_contract_load();
    var res = $Safe$_fun_owners(self);
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.any.v0"H >> 128
    );
}

_ get_abi_ipfs() {
    return "ipfs://QmQjqsVtrfCowyYMqMREDximB8PsVvEubYTEfQGQqiXgZ5";
}

_ lazy_deployment_completed() {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract Safe
;;

((int, cell, int, int, (int, int)), int) $Safe$_contract_router((int, cell, int, int, (int, int)) self, int msg_bounced, slice in_msg) impure inline_ref {
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Receive SafeDeployment message
    if (op == 1857061459) {
        var msg = in_msg~$SafeDeployment$_load();
        self~$Safe$_receive_binary_SafeDeployment(msg);
        return (self, true);
    }
    
    ;; Receive SafeRequestOperation message
    if (op == 2724662621) {
        var msg = in_msg~$SafeRequestOperation$_load();
        self~$Safe$_receive_binary_SafeRequestOperation(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$Safe$_receive_binary_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = ((msg_flags & 1) == 1 ? true : false);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $Safe$_contract_load();
    
    ;; Handle operation
    int handled = self~$Safe$_contract_router(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(handled, 130);
    
    ;; Persist state
    $Safe$_contract_store(self);
}
