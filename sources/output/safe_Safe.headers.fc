;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_dict_get_slice_int
int __tact_dict_get_slice_int(cell d, int kl, slice k, int vl) inline;

;; __tact_dict_set_slice_int
(cell, ()) __tact_dict_set_slice_int(cell d, int kl, slice k, int v, int vl) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $global_reply
() $global_reply(cell $body) impure inline_ref;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Safe$_contract_init
(int, cell, int, int, (int, int)) $Safe$_contract_init(slice $owner, int $id) impure inline_ref;

;; $Safe$_contract_load
(int, cell, int, int, (int, int)) $Safe$_contract_load() impure inline;

;; $Safe$_contract_store
() $Safe$_contract_store((int, cell, int, int, (int, int)) v) impure inline;

;; $Safe$_fun_isOwner
int $Safe$_fun_isOwner((int, cell, int, int, (int, int)) $self, slice $address) impure inline_ref;

;; $Safe$_fun_owners
cell $Safe$_fun_owners((int, cell, int, int, (int, int)) $self) impure inline_ref;

;; $Safe$_fun_parameters
(int, int) $Safe$_fun_parameters((int, cell, int, int, (int, int)) $self) impure inline_ref;

;; $Safe$_fun_seqno
int $Safe$_fun_seqno((int, cell, int, int, (int, int)) $self) impure inline_ref;

;; $Safe$_fun_treshold
int $Safe$_fun_treshold((int, cell, int, int, (int, int)) $self) impure inline_ref;

;; $Safe$_load
(slice, ((int, cell, int, int, (int, int)))) $Safe$_load(slice sc_0) inline;

;; $Safe$_store
builder $Safe$_store(builder build_0, (int, cell, int, int, (int, int)) v) inline;

;; $Safe$init$_load
(slice, ((slice, int))) $Safe$init$_load(slice sc_0) inline;

;; $SafeDeployment$_load
(slice, ((slice))) $SafeDeployment$_load(slice sc_0) inline;

;; $SafeOperation$_load
(slice, ((tuple, tuple))) $SafeOperation$_load(slice sc_0) inline;

;; $SafeOperationTransfer$_as_optional
tuple $SafeOperationTransfer$_as_optional((slice, int, int, cell) v) inline;

;; $SafeOperationTransfer$_load
(slice, ((slice, int, int, cell))) $SafeOperationTransfer$_load(slice sc_0) inline;

;; $SafeOperationUpdateParameters$_as_optional
tuple $SafeOperationUpdateParameters$_as_optional(((int, int)) v) inline;

;; $SafeOperationUpdateParameters$_load
(slice, (((int, int)))) $SafeOperationUpdateParameters$_load(slice sc_0) inline;

;; $SafeParameters$_constructor_timeout_requestPrice
((int, int)) $SafeParameters$_constructor_timeout_requestPrice(int timeout, int requestPrice) inline;

;; $SafeParameters$_load
(slice, ((int, int))) $SafeParameters$_load(slice sc_0) inline;

;; $SafeParameters$_store
builder $SafeParameters$_store(builder build_0, (int, int) v) inline;

;; $SafeParameters$_to_external
(int, int) $SafeParameters$_to_external(((int, int)) v) inline;

;; $SafeRequestOperation$_load
(slice, (((tuple, tuple)))) $SafeRequestOperation$_load(slice sc_0) inline;

;; $SendParameters$_constructor_bounce_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body(int bounce, slice to, int value, int mode, cell body) inline;

;; $SendParameters$_constructor_to_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode(slice to, int value, int mode) inline;
