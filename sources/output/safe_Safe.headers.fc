;;
;; Header files for Safe
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_get_int_cell
cell __tact_dict_get_int_cell(cell d, int kl, int k) inline;

;; __tact_dict_set_slice_int
(cell, ()) __tact_dict_set_slice_int(cell d, int kl, slice k, int v, int vl) inline;

;; __tact_dict_get_slice_int
int __tact_dict_get_slice_int(cell d, int kl, slice k, int vl) inline;

;; __tact_address_eq
int __tact_address_eq(slice a, slice b) inline;

;; __tact_cell_eq
int __tact_cell_eq(cell a, cell b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $SafeDeployment$_load
(slice, ((slice))) $SafeDeployment$_load(slice sc_0) inline;

;; $SafeOperations$_store
builder $SafeOperations$_store(builder build_0, (cell, int) v) inline;

;; $SafeOperations$_load
(slice, ((cell, int))) $SafeOperations$_load(slice sc_0) inline;

;; $SafeRequestOperation$_load
(slice, (((cell, int)))) $SafeRequestOperation$_load(slice sc_0) inline;

;; $SafeParameters$_store
builder $SafeParameters$_store(builder build_0, (int, int) v) inline;

;; $SafeParameters$_load
(slice, ((int, int))) $SafeParameters$_load(slice sc_0) inline;

;; $SafeOperationTransfer$_load
(slice, ((slice, int, int, int, cell))) $SafeOperationTransfer$_load(slice sc_0) inline;

;; $SafeOperationUpdateParameters$_load
(slice, (((int, int)))) $SafeOperationUpdateParameters$_load(slice sc_0) inline;

;; $SafeOperationTransfer$_as_optional
tuple $SafeOperationTransfer$_as_optional((slice, int, int, int, cell) v) inline;

;; $SafeOperationUpdateParameters$_as_optional
tuple $SafeOperationUpdateParameters$_as_optional(((int, int)) v) inline;

;; $SafeOperation$_load
(slice, ((tuple, tuple))) $SafeOperation$_load(slice sc_0) inline;

;; $SafeOperation$_as_optional
tuple $SafeOperation$_as_optional((tuple, tuple) v) inline;

;; $SafeOperation$_load_opt
tuple $SafeOperation$_load_opt(cell cl) inline;

;; $SignerArgs$_store
builder $SignerArgs$_store(builder build_0, (slice, cell, int, int, int, (cell, int)) v) inline_ref;

;; $SignerArgs$_load
(slice, ((slice, cell, int, int, int, (cell, int)))) $SignerArgs$_load(slice sc_0) inline_ref;

;; $OperationsSigned$_load
(slice, (((slice, cell, int, int, int, (cell, int))))) $OperationsSigned$_load(slice sc_0) inline;

;; $SignerDeploy$_store
builder $SignerDeploy$_store(builder build_0, (int) v) inline;

;; $SignerDeploy$_store_cell
cell $SignerDeploy$_store_cell((int) v) inline;

;; $Safe$_store
builder $Safe$_store(builder build_0, (int, cell, int, int, (int, int)) v) inline;

;; $Safe$_load
(slice, ((int, cell, int, int, (int, int)))) $Safe$_load(slice sc_0) inline;

;; $SafeParameters$_to_external
(int, int) $SafeParameters$_to_external(((int, int)) v) inline;

;; $SafeOperation$_not_null
((tuple, tuple)) $SafeOperation$_not_null(tuple v) inline;

;; $SafeOperationTransfer$_not_null
((slice, int, int, int, cell)) $SafeOperationTransfer$_not_null(tuple v) inline;

;; $SafeOperationUpdateParameters$_get_parameters
_ $SafeOperationUpdateParameters$_get_parameters(((int, int)) v) inline;

;; $SafeOperationUpdateParameters$_not_null
(((int, int))) $SafeOperationUpdateParameters$_not_null(tuple v) inline;

;; $Safe$init$_load
(slice, ((slice, int))) $Safe$init$_load(slice sc_0) inline;

;; $Signer$init$_store
builder $Signer$init$_store(builder build_0, ((slice, cell, int, int, int, (cell, int))) v) inline;

;; $SafeParameters$_constructor_timeout_requestPrice
((int, int)) $SafeParameters$_constructor_timeout_requestPrice(int timeout, int requestPrice) inline;

;; $Safe$_contract_init
(int, cell, int, int, (int, int)) $Safe$_contract_init(slice $owner, int $id) impure inline_ref;

;; $Safe$_contract_load
(int, cell, int, int, (int, int)) $Safe$_contract_load() impure inline;

;; $Safe$_contract_store
() $Safe$_contract_store((int, cell, int, int, (int, int)) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline_ref;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body(int bounce, slice to, int value, int mode, cell body) inline;

;; $global_reply
() $global_reply(cell $body) impure inline_ref;

;; $SendParameters$_constructor_value_to_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_value_to_mode_bounce_body(int value, slice to, int mode, int bounce, cell body) inline;

;; $Safe$_fun_executeTransfer
((int, cell, int, int, (int, int)), ()) $Safe$_fun_executeTransfer((int, cell, int, int, (int, int)) $self, (slice, int, int, int, cell) $op) impure inline_ref;

;; $Safe$_fun_executeParameters
((int, cell, int, int, (int, int)), ()) $Safe$_fun_executeParameters((int, cell, int, int, (int, int)) $self, ((int, int)) $op) impure inline_ref;

;; $Safe$_fun_execute
((int, cell, int, int, (int, int)), ()) $Safe$_fun_execute((int, cell, int, int, (int, int)) $self, (tuple, tuple) $op) impure inline_ref;

;; $Safe$_fun_parameters
((int, cell, int, int, (int, int)), (int, int)) $Safe$_fun_parameters((int, cell, int, int, (int, int)) $self) impure inline_ref;

;; $Safe$_fun_treshold
((int, cell, int, int, (int, int)), int) $Safe$_fun_treshold((int, cell, int, int, (int, int)) $self) impure inline_ref;

;; $Safe$_fun_seqno
((int, cell, int, int, (int, int)), int) $Safe$_fun_seqno((int, cell, int, int, (int, int)) $self) impure inline_ref;

;; $Safe$_fun_isOwner
((int, cell, int, int, (int, int)), int) $Safe$_fun_isOwner((int, cell, int, int, (int, int)) $self, slice $address) impure inline_ref;

;; $Safe$_fun_owners
((int, cell, int, int, (int, int)), cell) $Safe$_fun_owners((int, cell, int, int, (int, int)) $self) impure inline_ref;

;; $Signer$_init_child
(cell, cell) $Signer$_init_child(cell sys', (slice, cell, int, int, int, (cell, int)) $args) inline_ref;

;; $SendParameters$_constructor_to_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode(slice to, int value, int mode) inline;

;; $SignerArgs$_constructor_safe_owners_ownersCount_treshold_timeout_ops
((slice, cell, int, int, int, (cell, int))) $SignerArgs$_constructor_safe_owners_ownersCount_treshold_timeout_ops(slice safe, cell owners, int ownersCount, int treshold, int timeout, (cell, int) ops) inline;

;; $SendParameters$_constructor_value_to_mode_bounce_code_data_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_value_to_mode_bounce_code_data_body(int value, slice to, int mode, int bounce, cell code, cell data, cell body) inline;

;; $SignerDeploy$_constructor_queryId
((int)) $SignerDeploy$_constructor_queryId(int queryId) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
